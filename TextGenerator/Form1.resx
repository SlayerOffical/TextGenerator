<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AABlKD7/Yic8/18mOv9fJDv/ZCU//2YkQf9mJEH/ZiRB/2YkQf9oJkP/bCpH/20rR/9oJkP/ZyZF/2sn
        R/9vJUb/bCNC/2ciP/9fJD3/WyU8/1wlOv9hJDr/YyU7/2InPP9iJz3/Yic8/2InPP9dIjf/WyA1/1sg
        Nf9eIzj/YSU6/2EkOv9gJTv/XiU6/18kO/9kJUD/aihF/2wqR/9oJkP/ZiRB/2spRv9tK0j/aihF/2cl
        Qv9kIUH/cClK/20jRP9uI0L/aCJA/1wfOP9dJT3/YCg9/2QmPP9iIzn/YCQ7/2InPP9hJjr/XyQ5/14j
        Of9eIzj/XiM4/14jOP9fJDn/YSU6/2AlOv9eJTr/XyU7/2YnQv9gID3/aitH/2stSP95Olb/dDVQ/2Un
        Q/9iIz//YyM//2UjQv95MlP/dytM/3ElRf9rI0H/XyE7/14kPf9hJjz/ZSU7/2MjOf9gJTr/Yic8/2Em
        O/9fJDn/XiM4/14jOP9eIzn/XiM4/14jOP9hJDr/YCU6/18lOv9eJTr/XiM9/2AmQv9nK0f/jFBt/9qi
        vv++hKD/cjdT/18jP/9fIz//ZCJB/381Vv+BM1X/fjBQ/3cuTP9jIz7/XiQ8/2AkOv9kJDr/YyM5/2Ak
        Ov9iJzz/YSY7/18kOf9eIzn/XiM4/14jOP9eIzj/XSM4/2EkOv9gJTr/XiQ6/14lO/9eJD7/YChD/2Eo
        RP+YYXv/37LO/8iUsP94QFz/WyM//2EoQ/9pJkT/eC1P/3wuTv+BMlP/dy5N/2cmQP9fJDz/XyI4/2Ui
        Of9iIzn/YCQ6/2ImPP9hJjv/XyQ5/14jOf9eIzj/XiM4/14jOP9dJDn/ZSU7/2IlOv9hJTv/YSU7/10i
        O/9hJED/bCpJ/3YzU/92MVP/ci5P/2wpSf9iI0D/XyI//2UjQf9rJET/bSRD/3EpR/9oJEH/ZCZB/1wl
        PP9bIzv/XyM7/2AjPP9gJT3/YSY+/2AlPf9dIjr/XSM6/1sgOP9dIjr/XyQ8/18iPP9mJjz/ZyY8/2Ym
        PP9mJjz/Zyc//2olQv93K03/gjBY/4MvWf+BLlf/dylO/20lQ/9nJD//aSdC/2kkQv9mIj//ZCI//2Ul
        Qf9dIj7/XCI+/1ojPv9ZIz7/XCM//2AjPv9gIz7/XyI+/14hPf9fIj7/XB46/2AiPv9mKUX/ZSZC/2Ym
        PP9mJjz/ZiY8/2YmPP9oJj7/aiRC/3EmR/93Jk3/eyhQ/30rU/90J0r/bCRC/2cjPv9qJEH/biRC/3An
        Rf9tJkT/ZCE+/2IgPf9gID3/XyE9/1whPf9eIDz/YB47/2EfPP9jID3/ZSNA/2YkQf9lI0D/YiA9/2Qi
        Pv9nJUL/ZiY8/2YmPP9mJjz/ZiY8/2clPv9qJUL/bCJC/24gQ/9yI0f/ih9H/3IjR/9tJkX/bipH/28m
        Qv98ME//kkdl/41DYf90K0n/ZyE//2YhP/9lIT//ZCI//2YiP/9mID7/ZR48/2cgPv9rJEL/fDVT/4I7
        Wf93ME7/aSJA/2smQ/9mJjz/ZiY8/2YmPP9mJjz/ZCM9/2slQ/9pI0H/aSFA/4IgRf/BDkP/dSBC/2ok
        Qv9rJ0P/cy1K/3szUf+KRGH/i0Ri/3YwTv9pJEL/aCRC/2YlQv9nJUL/aydE/2smRP9mID//ZiE+/2ol
        Qv96NlT/jEdk/4E9Wv9qJUL/aiZD/2YmPP9nJjz/ZiY8/2YmPf9pJUH/aiVB/2kkQP9wID7/xQxC/90G
        Q/+CHD//aCM+/2gjQP9mJkL/ZSdC/2kqRv9qLEj/ZyhG/2YmQv9lJEH/YyNA/2UkQf9nJ0X/ZiZD/2Ij
        P/9iIj//aCNB/3khQv9sLEn/bCxJ/2QlQv9mJEH/ZiY8/2YmPP9nJzz/Zic9/20nQ/+NHUP/ywtD/+QE
        Q//kBEP/5ARD/50XQP+GHD//4QVD/+UEQ//kBEP/5ARC/+QEQ/+0EUL/dR9C/84IQv/kBEP/oBRB/2Mm
        Q/9gJUH/XiM+/2EhPf+mEkH/rg9B/18gPv9eIj7/XSE9/2EiPv9mJjz/ZiY8/2YmPP9mJz3/jR9F/90H
        RP/kBEP/5ARD/+QEQ//kBEP/thBA/3ghP//MCkL/5ARD/+QEQ//kBEP/5ARD/8sKQv9yHT//tQ9B/+QE
        Q/+9DkL/bSRD/2ElQf9lID7/qhBA/+QEQ//KCUH/ax4+/10hPf9dID3/YiI//2YmPP9mJjz/ZiY8/2sl
        P/+5EUP/5ARD/+QEQ//YCEL/0glB/+QEQ//PCUH/eh9A/7gPQv/kBEP/4AVD/8sKQv/JC0P/yAtD/4Ec
        Qf+eFUH/5ARD/9YIQ/+DI0f/cCVE/64SQv/lBEP/5ARC/+AFQ/+EHED/ZCE//2YjQP9qJEP/Yic8/2In
        Pf9kJjz/byM9/8kLQ//kBEP/ywpC/24kO/+FHjz/5ARD/+QEQv+HHED/nhdC/+QEQ//dBkP/kxlC/20l
        Q/9sJkT/bCRC/4ocQv/hBUP/5ARD/54bRv+0EkT/5ARD/+QEQ//kBEP/5ARD/5sVQf9iIDz/ZSE//2gk
        Qf9aKDz/XSg8/2AnPP9pJTz/ug9B/+QEQ/+2EED/ZiU7/3EiPf/OCUD/5AVD/6EWQP+BID//3QZD/+QE
        Q//kBEP/1gdD/6EXQ/9yI0P/eCNF/8wKQ//kBEL/5ARD/+QEQ//kBEP/5ARD/+QEQ//kBEP/sxBC/2Mj
        QP9hIj7/YSM//18mPP9iJzz/ZSY8/2cmPP+YGD7/5ARD/9cJQv96Hzz/YSM5/3gdO/+CHD3/eh89/24j
        Pf/GC0P/5ARD/74NQv+KGkL/ixtC/4ocQv9+IUT/sxFC/+QFQ//kBEP/5ARD/+QFQ/+9DkP/sA9B/+QE
        Q//OCUL/cB9B/2YlQv9mJEH/ZiY8/2cmPP9pJTz/aiU9/3slQf/NDEP/5ARD/9IJQ/+HHD7/ZyA5/2Ui
        Ov9mIzv/YCU9/6kRQP/kBEP/yApC/3geQf9zIEH/cyBB/20kQv+XGEP/5QVD/+QEQ//kBEP/xgxC/3kg
        Q/+JHUL/4QVC/+QEQ/+JG0P/aiZD/20mRP9oJjz/ZyY8/2glPP9pJTz/cSpC/48kRP/XCUT/5ARD/+QE
        Q//kBUP/5ARD/+QEQ/+FGz//jBc8/+QEQ//kBEL/5ARD/+QFQ//kBEP/qRJC/3weQf/YB0L/5QRD/8UK
        Qf98IUT/eC1M/4crTv/QCUP/5QRD/6kUQv9sJEL/biNB/2YlO/9mJjz/Zic9/2YnPf9uKD//bylB/30j
        QP/ADUD/5ARD/+QEQ//kBEP/5ARD/6IUPv91HDz/2AdC/+QEQ//kBUP/5ARD/+QEQ//CDUP/dCFC/8AM
        Qv/QCUL/fSFD/3kwTv+CNlX/hTVV/7kSRP/kBEP/vQ9D/3IiQv9uIkD/YCA2/2AjOP9gJjr/Yig9/2on
        Pv9rJz3/ZiY8/2UlO/91Hzv/lBY8/54UP/+dFD//kBk+/38dP/+iFUL/pBRC/6YUQv+nFEP/phNC/6EU
        Qf9xHT//oRJA/3MdPv9qKEX/eDBO/30yUf9+K0v/nxhD/6UVQ/+hF0P/diFD/3EjQv9sKD//ZSc8/2Al
        O/9eJjv/Zyg+/2cnPf9mJjz/YiQ7/18lOf9cIzj/WyU5/1wmO/9cJzz/XyY+/2EkQf9mJEL/aiZE/20n
        Rf9tJ0T/ZiNA/2AgPf9gID3/XSI+/2MkQf9tKEb/cChH/2olQv9iI0D/YCRA/2MlQf9pJUL/cCNC/4M4
        UP90LkX/Zic9/2EkOv9jKT7/Yyg9/2InPP9gJjv/XyU6/10kOf9eJTr/XyY7/2AnPf9gJj//YSVB/2Ul
        Qv9pJkP/bCdE/3ItSv9rKEb/ZSVC/2AkQP9cIz7/XSI+/2UkQf9oJEH/ZCI//1whPf9bIz7/XiVA/2Ym
        Qv9uJEL/izpV/3ouSP9tJz7/ZyY+/2MoPv9gKT3/YCc8/18mO/9fJTr/YCU6/2EmO/9iJzz/ZCg+/2Ak
        Pf9fIj//ZCJB/2ckQf9pJEL/bilG/2wpRv9lJkL/XCE9/1gfO/9cIj7/YyRB/2gmQ/9nJkP/WiA8/1kh
        PP9dJD//ZSZC/28mRP9pJUH/ZiRA/2cjP/9pIj7/YSQ8/14lO/9eJTr/XiU6/10lOf9cIzj/XyQ6/18l
        Ov9hJzz/YSM9/2QjQP9pJ0T/aSdE/2gmQ/9mJEH/aSdE/2QiP/9iIj//ZiRC/2ckQf9pJUP/aydF/20p
        Rv9pJEL/ZyVB/2ckQf9oJEH/bSVD/2AgPf9iIj//aCNA/20kQf9iJDz/XyU6/14lOv9eJTr/XSQ5/1wj
        OP9eJTr/XiQ6/2AnPP9lJ0H/bCpH/2knRP+BP1z/lVNw/3QyT/9iID3/aCZD/2EfPP9mI0D/ayVD/2wm
        RP9sJ0X/bihH/2wnRP9sJkT/bSZE/2wmRP9uJkT/YyNA/2MjQP9mIT//aiE//2IkO/9fJTr/XyU6/18l
        Ov9fJDj/XSM4/18lOv9gJTr/YSY8/2YnQf9pJ0T/aSdE/6Zkgf/fnLn/mVd0/2YkQf9mJEH/YyE//2oo
        Rf9sKEX/aydE/2snRP9rJ0T/bChF/2woRf9sKEX/bChF/2woRf9nJ0T/ZiZD/2gkQf9sI0D/ZCQ8/2Ek
        Ov9hJDr/YSU6/2AkOf9fIzj/YSQ6/2AlOv9jJjz/ZyZB/2knRP9mJED/eTdU/41LaP97OVb/YyE+/2cl
        Qv9kIj//ZiRB/2kmQ/9oJUL/ZiRB/2UjQP9oJkP/aCZD/2gmQ/9oJkP/ZiZD/2UlQv9pKEX/bSlG/3Mp
        Rv9oJj7/ZSY8/2UmPP9kJjz/ZCY8/2MkOv9kJTv/ZCU7/2QlPP9nJj//ZyVC/2knRP9pJ0T/aCZD/2kn
        RP9kIj//aCdE/2soRv9mJEH/ZiRB/2UjQP9lIz//YiE+/2UkQP9lJEH/ZSJB/2QjQP9iJED/ZSVC/2ko
        Rf9tKUb/cCZC/2ooQP9pKD//aipA/2srQf9rK0H/aSk//2goPv9nJz3/ZiY8/2cmQP9oJkP/aCZD/2gm
        Q/9oJkL/ZyVD/2UjQP9vLEn/bixJ/2QkQf9kJEH/ZCRB/2QkQf9kJEH/ZCVC/2QlQf9jJED/YiI//2Aj
        P/9kJEH/ZiRC/2olQv9tI0H/aiY+/2koPv9rKkD/bSxC/24tQ/9sK0H/aipA/2ooP/9pJz7/ZyZA/2Yk
        Qf9mJEH/ZyRB/2clQv9qKEX/ZiVC/2wqR/9pJ0T/YiI//2IlQf9iJUH/YyVB/2IlQP9lKET/ZCdD/2Mm
        Qv9iJUH/YCVB/2MjQP9kI0D/aiVD/3EnRP9uKEH/bCg//20pQP9uKkH/bitB/24qQf9tKUD/bCg//2on
        Pv9nJT//ZiRB/2YkQf9mJED/ZiRA/2knRP9oJkP/aSdE/2UjQP9hIj//YCVB/2AlQf9gJUH/YCVB/2Mo
        RP9iJ0P/YSZC/2AlQf9hJUH/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>